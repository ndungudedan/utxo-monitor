use bitcoin::{consensus::deserialize, Transaction};

use crate::{find_address_match, nostr_notify};

pub async fn test_site() {
    // Addresses in the tx below
    //
    // bc1qvnd67dh2ped0tpmlrwhpcqalmg5d0yaaenvefz
    // 1J1pdUPAJqEzrz1s2KwF81praccdNENBxy
    // bc1q73xhznnj5tdmyvvqzns4wxpurmtdfnmrq8kr42
    // bc1qj30hjc3f8nc7t7cgnczed4xlghx57p7jtt4cqn
    // 3EaNA3Sv7JEvfFxGJSK93QRKFQNJowrtXD

    let mock_tx_hex=[
        "02000000000101df47f0722f31a919a773553b37a224bd200a1f4fd3c41aa4b804e657dd2c68540000000000fdffffff023bc1250300000000160014f016de8752561997891c3132ee39c06cfa4ca648819a01000000000016001455f9da33744d89a9cd8ca87a324b8098a35d3fd2024730440220642a2b825be3b93b0738d61655eed795bf3d1860c089838cda3bf4bb6ea28cdb02207bab2463f1ec7f8e2f93283198ca2ff600ca9817db584083cfe9053d5bde39640121029d21cfab561bc97bec59567bf7cf0b247e902ce2d2aabbc96bb366c0a2933322977b0d00",
        "010000000001016423840692dd02b1aa0e92c86063164dd51a70aca4e5ee0508bd27bb1a01ff7b0200000000ffffffff0142580000000000001976a914a6f376c5edaee2f0d828ced5b0968a6145d27b7788ac024730440220661117cf61bbc77793d661c0cffea1678b1e6c92099c32a312bf1dc09d6e19550220167c71601941e4c57b7c95fb162420ddb975a0c883af9d759db5376ea06c5214012102816fe7c2f6e6a6263107fe9f49ef48a049f14b86925e27c474721f546faf003400000000",
        "0100000000010163c7317b874149a3b85a0f1a1330af71df61ea149bb444421cf95445e63363640100000000ffffffff020071020000000000160014f44d714e72a2dbb2318014e157183c1ed6d4cf63090d000000000000160014a4a850a0733e37d9c7bbe138ec0cc26e35b7badc02483045022100e13a8483aeca77eb98254f94b96f7a4642b17ec9bd16aa985c11e6cf0fd150b402202da409afd878588f3cf77d6ac89a7d37295f49d604c1d66dd5c93bd75a2e9e610121025e92a4fb3b8ba4c3991695ebcd45c885e34ddf5637932a096009c9d860452cb000000000",
        "010000000001015f7f7c6e95fe70bdb7c07ba54f80e50d957d63571ffc9ea6037cab490a4076b41000000000ffffffff0221300600000000001976a914a12fabada4f0a9c0d0d489b60b0ccdc6049fa40388ac966c060000000000160014e167fe72f72791e526dcecfebf30643d90b323a002483045022100d67a8545546f0bdde600a8462f7bb3f56948df071314caa1d0a18dba478e540c022012e6c53b448ecdbe6fea17cdd71ac37c717263d0defe6032ffa141a06b1f2f6f0121023a657214ff901ae979e108fd5ec0b7db8618d818f829dcb24551033036a1679400000000",
        "02000000000101acde64b3050423e895ce6edb6ec8958fde6c52fd9b3f11352b664ae05b66934d1400000000feffffff01546e0100000000001976a9148d01350e7c4c372418bb7d13798a481862e7759488ac02473044022021178087f68b4a7882be93d331d5dced097519b3e70f7c2699678274f01ec527022003db67420953b5f374cd7f50cd515320678d29969c93a5948e230b2756f37cc801210343590e019528334b86560567aa902c8636dfa76006dbba56e3d1213473c4b4d59f7b0d00",
        "02000000000103e63c795e04681d2303a88fe677de95aaa320081f0fbb85169f92716ecf8b36560200000000ffffffff8189e840fd50d3d3595a528c6e87ad1d7cbcbf24ac2ec38e881ab69d75cadc7b0000000000ffffffff0dc46bf667bc3d6a8763967ac91a97f6e00222f21fcac6aded0f25ab1541b0bd0500000000ffffffff0188b04e000000000016001464dbaf36ea0e5af5877f1bae1c03bfda28d793bd02483045022100c2d3d1d211d13c79aa66d7e558e5d65fef7d3dad6b460ae0ec23535633684f03022072532f1d1ae0f0db5b49d4bf3b7b15251d2c671ab48f4d9c860b88a536ef0e9f0121034d472584a50760999c4d6ae70a0e27a0d441d041007e58d774774c77f5f2212b02483045022100f6601cfca71cbf37cd8375bfe6e68b5eab1d9b327a2c93791ea93489ca92aa2a022059aecb8f38832ea423b0d084e6ba8b57dbc916f92c35a68b1d4aa520aa1804110121036ed2cc81a4218aa32c051d31903d6cafe0b794cefd2a935c61c32702c4ef427b02483045022100e47cf9d5376ca68ecae2b0391e7bb40a7aad69dcad8e3570fe8d8440c517fd2602205dcea821344fb4cc178660191fba36067c6887f5351502e5b5746225c51733090121033d41ef26d7f457e7832a8f3507579e1732eed38c5f6977a97136b639be63d12100000000",
        "01000000000101987b134bb2696009b2017c3606282db8e3a763553e0a3db90a9bf06350b12fee1100000023220020e950ab259450b6fe5ae4e32744177e3b33e966a49898f8261d886888c21c236cffffffff02ab3e0000000000002200204d054bc4b426a8a166ab6af20f4753436b8c80d1a87bba78dd7d160e945c31f4a82c030000000000160014a2454be60624642a8c05bdc51eb637edc76267dd03004730440220630b01390bd95db8a92f154607fb2d1a8d445bd72772e526978ce578e43dde46022020af032ccd53a31b81d7ca5aff42376b7a944f75b720a20dec1d5ee7186aa89e0125512103bff9fbb87a23082ffc2c0aacaa48d0353b92bfa6bb9a2a1306ba410f612b453d51ae00000000",
    ];

    nostr_notify::get_nostr_client().await;
    for hx in mock_tx_hex {
        let tx_data = hex::decode(hx).unwrap();
        if let Ok(tx) = deserialize::<Transaction>(&tx_data) {
            find_address_match(tx, true).await;
        } else {
            println!("Failed to decode transaction.");
        }
    }
}
